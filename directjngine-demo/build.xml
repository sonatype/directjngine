<project name="DirectJNgine" basedir="." default="echo">
  
  <!-- ============================================================================== -->
  <!-- #################################  CUSTOMIZE ################################# -->
  <!-- ============================================================================== -->
  <property name="jdk_version" value="1.5"/>
  <property name="compiler" value="javac${jdk_version}"/>
  <property name="debug" value="true"/>
  
  <!-- ############################################################################## -->
  <!-- ############################################################################## -->
  <!-- ############################################################################## -->
  <!-- ############################################################################## -->
  <!-- ############################################################################## -->
  <!-- ############################################################################## -->
  
  <!-- ============================================================================== -->
  <!-- ###################  PRIVATE CONFIGURATION: Do not modify! ################### -->
  <!-- ============================================================================== -->
  <property name="lib_version_number" value="2.2"/>    
  <tstamp><format pattern="yyyy_MM_dd_HH_mm_ss" property="version.timestamp"/></tstamp>
  <property name="lib_version" value="${lib_version_number}"/> <!-- Might use ${version.timestamp} -->
  <property name="gson.jar" value="${basedir}/lib/gson-2.2.1.jar"/>
  <property name="log4j.jar" value="${basedir}/lib/log4j-1.2.15.jar"/>
  <property name="classpath" value="${basedir}/lib/commons-fileupload-1.3.3.jar;${basedir}/lib/commons-io-1.4.jar;${gson.jar};${log4j.jar};${basedir}/lib/compiletimeonly/testng-5.7-jdk15.jar;${basedir}/lib/compiletimeonly/servlet-api.jar;${basedir}/lib/compiletimeonly/annotations.jar;;${basedir}/lib/compiletimeonly/jsr305.jar;${basedir}/lib/yuicompressor-2.4.2.jar;"/>
  <property name="classes_jar" value="directjngine.${lib_version}.jar"/>
  <property name="source_jar" value="directjngine.${lib_version}.src.jar"/>
  <property name="javascript_source_zip" value="directjngine.${lib_version}.javascript_src.zip"/>
  <property name="all_zip" value="directjngine.${lib_version}.zip"/>
  <property name="UserGuideName" value="DirectJNgine_User_Guide"/>
  <property name="deliverables.output.dir" value="${basedir}/workdir/deliverables"/>
  <path id="classpath">
     <fileset dir="${basedir}/lib" includes="**/*.jar"/>
  </path>

  <!-- ============================================================================== -->
  <!-- ##################################  BASIC  ################################### -->
  <!-- ============================================================================== -->
  <target name="clean" description="Clean all outputs">
    <antcall target="_clean_compilation"/>
    <antcall target="_clean_javadoc"/>
    <antcall target="_clean_deliverables"/>    
    <antcall target="_clean_war"/>    
    <!-- EXPERIMENTAL: Retrotranslation
    <antcall target="_clean_retrotranslated"/>
    -->
  </target>

  <target name="echo" description="Check whether ant can use this file" >
    <echo message="********** Environment Information **********"/>
    <echo message="Java version: ${ant.java.version}"/>
    <echo message="Java class version (java.class.version): ${java.class.version}"/>
    <echo message="Java VM: ${java.vm.name}, ${java.vendor}"/>
    <echo message="Java home (java.home): ${java.home}"/>
    <echo message="Ant version (ant.version): ${ant.version}"/>
    <echo message=" "/>
    <echo message="********** Project Configuration ************"/>
    <echo message="Project name: ${ant.project.name}"/>
    <echo message="Project version: ${lib_version}"/>
    <echo message="Compiler for 'javac': ${compiler}"/>
    <echo message="JDK target version: ${jdk_version}"/>
  </target>
  
  <target name="run_log4j_viewer" description="Start Log4j viewer (Chainsaw)">
    <java classpath="${log4j.jar}" classname="org.apache.log4j.chainsaw.Main" spawn="true" fork="true"/>
  </target>
  
  <!-- ============================================================================== -->
  <!-- #############################   COMPILE     ############################# -->
  <!-- ============================================================================== -->
  <target name="compile" description="Compile source code">
    <antcall target="echo"/>
    <echo message="Compiling main code..."/>
  
    <mkdir dir="workdir/build"/>
    <mkdir dir="workdir/build_test"/>
    
    <!--
    <antcall target="_clean_compilation"/>
    -->
  
    <javac compiler="${compiler}" destdir="workdir/build" classpath="${classpath};" 
      srcdir="src/prod" debug="${debug}" target="${jdk_version}" source="${jdk_version}"
      fork="true" encoding="utf8">
    </javac>
    
    <echo message="Copying additional main files (.properties, etc.)..."/>
    <copy todir="workdir/build">
      <fileset dir="src/prod" >
        <exclude name="**/*.java"/>
      </fileset>
    </copy>

    <echo message="Compiling test and demo code..."/>
    <javac compiler="${compiler}" destdir="workdir/build_test" classpath="${classpath};workdir/build" 
      srcdir="src/demo;src/test" debug="${debug}" target="${jdk_version}"
      encoding="utf8">
    </javac>

    <echo message="Copying additional test and demo files (.properties, etc.)..."/>
    <copy todir="workdir/build_test">
      <fileset dir="src/demo" >
        <exclude name="**/*.java"/>
      </fileset>
      <fileset dir="src/test" >
        <exclude name="**/*.java"/>
      </fileset>
    </copy>

    <echo message="Djn classes output directory: ${basedir}/workdir/build"/>
    <echo message="Test and demo classes output directory: ${basedir}/workdir/build_test"/>
  </target>

  <target name="_clean_compilation">
    <delete dir="workdir/build"/>
    <delete dir="workdir/build_test"/>
    <mkdir dir="workdir/build"/>
    <mkdir dir="workdir/build_test"/>
  </target>

  <target name="build" description="Rebuild java code">
    <antcall target="_clean_compilation"/>
    <antcall target="compile"/>
  </target>
  
  <!-- ============================================================================== -->
  <!-- ##########################  javadoc  ########################## -->
  <!-- ============================================================================== -->
  <target name="_clean_javadoc">
    <delete dir="doc/javadoc" />
    <mkdir dir="doc/javadoc"/>
  </target>
  
  <target name="_create_javadoc">
    <echo message="Generating Javadoc in 'doc/javadoc/'..." />
    
    <!-- *VERY important*: do not use encoding="UTF-8", or Copyight and other will not appear ok! --> 
    <javadoc access="protected" 
      additionalparam=" -tag precondition:cm:&quot;Preconditions:&quot; -tag postcondition:cm:&quot;Postconditions:&quot; -tag invariant:t:&quot;Class Invariants:&quot; -linksource -header &quot;&lt;font size='-2'&gt;Copyright © 2008, 2009 Pedro Agulló Soliveres&lt;/font&gt;&quot;" 
      destdir="doc/javadoc" 
      author="true" 
      doctitle="DirectJNgine"   
      overview="${basedir}/src/prod/overview.html"

      classpath="${classpath}"
      nodeprecated="false" 
      nodeprecatedlist="false" 
      noindex="false" 
      nonavbar="false" 
      notree="false" 
      packagenames="com.softwarementors.extjs.djn,com.softwarementors.extjs.djn.api,com.softwarementors.extjs.djn.config,com.softwarementors.extjs.djn.config.annotations,com.softwarementors.extjs.djn.gson,com.softwarementors.extjs.djn.jscodegen,com.softwarementors.extjs.djn.router,com.softwarementors.extjs.djn.router.dispatcher,com.softwarementors.extjs.djn.router.processor,com.softwarementors.extjs.djn.router.processor.poll,com.softwarementors.extjs.djn.router.processor.standard,com.softwarementors.extjs.djn.router.processor.standard.form,com.softwarementors.extjs.djn.router.processor.standard.form.simple,com.softwarementors.extjs.djn.router.processor.standard.form.upload,com.softwarementors.extjs.djn.router.processor.standard.json,com.softwarementors.extjs.djn.scanner,com.softwarementors.extjs.djn.servlet,com.softwarementors.extjs.djn.servlet.config,com.softwarementors.extjs.djn.servlet.ssm" 
      source="${jdk_version}" 
      sourcepath="src/prod" 
      splitindex="true" 
      use="true" 
      version="true">
    </javadoc>
  </target>
  

  <!-- ============================================================================== -->
  <!-- ###########################   GOOGLE APPENGINE   ############################# -->
  <!-- ============================================================================== -->
  <target name="appengine.deploy" description="Deploy to Google AppEngine">
    <delete dir="workdir/appengine_war"/>
    <mkdir dir="workdir/appengine_war"/>

    <!-- Copy web site -->
    <copy todir="workdir/appengine_war">
      <fileset dir="WebContent" >
      </fileset>
    </copy>
    
    <!-- Copy .jars -->
    <copy todir="workdir/appengine_war/WEB-INF/lib">
      <fileset dir="lib" includes="*.jar" >
      </fileset>
      <fileset dir="lib/runtimeonly" includes="*.jar" >
      </fileset>
    </copy>
    
    <!-- Copy compiled classes -->
    <copy todir="workdir/appengine_war/WEB-INF/classes">
      <fileset dir="workdir/build" includes="**" >
      </fileset>
      <fileset dir="workdir/build_test" includes="**" >
      </fileset>
    </copy>
    
    <!-- Update files to use AppEngine configuration, instead of the "standard" one -->
    <replace dir="workdir/appengine_war"  
      includes="WEB-INF/web.xml,test/DjnManualTests.html,test/DjnTests.html,extjs/examples/direct/direct.php,extjs/examples/direct/direct-form.php,extjs/examples/direct/direct-tree.php"
      replacefilterfile="cfg/appengine_replacements.properties" >
      <!-- Servlet configuration -->
      <include name="WEB-INF/web.xml"/>
      
      <!-- DJN tests -->
      <include name="test/DjnTests.html"/>
      <include name="test/DjnManualTests.html"/>

      <!-- DJN demos -->
      <include name="demo/FormPostDemo.html"/>
      <include name="demo/DirectStoreDemo.html"/>
      
      <!-- ExtJs patched demos -->
      <include name="extjs/examples/direct/direct.php"/>
      <include name="extjs/examples/direct/direct-form.php"/>
      <include name="extjs/examples/direct/direct-tree.php"/>
    </replace>
  </target>
  
  <!-- ============================================================================== -->
  <!-- #############################   DELIVERABLES     ############################# -->
  <!-- ============================================================================== -->

  <target name="_clean_deliverables">
    <delete dir="${basedir}/deliverables"/>
    <delete dir="${deliverables.output.dir}"/>

    <mkdir dir="${basedir}/deliverables"/>
    <mkdir dir="${deliverables.output.dir}/deliverables"/>
    <mkdir dir="${deliverables.output.dir}/demos/demo_war"/>
  </target>

  <target name="_create_classes_jar">
    <jar destfile="${deliverables.output.dir}/deliverables/${classes_jar}">
      <fileset dir="${basedir}/workdir/build/"/>
    </jar>
  </target>
 
  <!-- Create Source JAR -->
  <target name="_create_source_jar">
    <jar destfile="${deliverables.output.dir}/deliverables/${source_jar}">
      <fileset dir="${basedir}/src/prod"/>
    </jar>
  </target>
  
  <target name="_create_javadoc_jar">
    <!-- Create Javadoc JAR -->
    <property name="javadoc_jar" value="directjngine.${lib_version}.javadoc.jar"/>
    <jar destfile="${deliverables.output.dir}/deliverables/${javadoc_jar}">
      <fileset dir="${basedir}/doc/javadoc/"/>
    </jar>
  </target>

  <target name="_clean_war">
    <delete dir="demos/demo_war"/>
    <mkdir dir="demos/demo_war"/>
  </target>
  
  <target name="_create_djn_demo_war">
    <antcall target="_clean_war"/>
    
    <!-- Create 'djn_test' war -->
    <war filesonly="true" compress="true" warfile="${deliverables.output.dir}/demos/demo_war/djn_test.war" webxml="${basedir}/WebContent/WEB-INF/web.xml">
      <fileset dir="WebContent" excludes="**/web.xml, **/MANIFEST.MF,WEB-INF/lib/*.*,extjs/**" />
      <!-- Do not want lib/compiletimeonly jars! -->
      <lib dir="lib" includes="*.jar"/>
      <lib dir="lib/runtimeonly"/>
      <lib dir="${deliverables.output.dir}/deliverables" includes="${classes_jar}"/>
      <classes dir="${basedir}/workdir/build_test"/>      

      <!-- Uncomment the following line to include ExtJs in WAR! -->
      <!--
      <fileset dir="WebContent" includes="extjs/**"/>
      -->
    </war>    

    <copy file="${deliverables.output.dir}/demos/demo_war/djn_test.war" todir="demos/demo_war"/>
    
    <echo message="VERY IMPORTANT: due to licensing issues, we can't redistribute"/>
      <echo message="ExtJs. Therefore, you MUST take the appropriate steps to modify"/>
    <echo message="this ant target to add your extjs distribution to the WAR"/>
  </target>
  
  <target name="build_djn_demo_war" description="Create djn_test WAR">
    <antcall target="clean"/>
    <antcall target="compile"/>
    <antcall target="_create_classes_jar"/>
    <antcall target="_create_djn_demo_war"/>
  </target>

  <target name="_update_deliverables">
    <copy todir="${basedir}/deliverables">
      <fileset dir="${basedir}/WebContent/djn">
        <exclude name="test/**"/>
      </fileset>

      <fileset dir="${basedir}/WebContent/ejn">
      </fileset>

      <fileset dir="${deliverables.output.dir}/deliverables">
      </fileset>
    </copy>
  </target>
    
  <target name="_create_project_zip">
    <!-- Create project zip -->
    <zip zipfile="${deliverables.output.dir}/${all_zip}" compress="true">
      <fileset dir="${basedir}">
        <!-- ExtJs files repository -->
        <exclude name="extjs/**"/>
        
        <!-- 'ignore' area -->
        <exclude name="ignore/**"/>
        
        <!-- Temporary work directories: ignore -->
        <exclude name="workdir/**"/>
        <exclude name="work/**"/>
        
        <!-- ExtJs files: ignore -->
        <exclude name="WebContent/extjs/**/**"/>
        <exclude name=".#webclasspath"/>
        
        <!-- JARs -->
        <exclude name="lib/doc_source/**"/>
        <exclude name="lib/latest/**"/>
        <exclude name="lib/ant_support/**"/>

        <!-- EXPERIMENTAL: Retrotranslation, do not add -->
        <exclude name="lib/retrotranslated/**"/>
        <exclude name="lib/retrotranslation_jdk1_4_support/**"/>

        <!-- Documentation: exclude all right now, and pick required files later -->
        <exclude name="doc/**"/>
        
      </fileset>
      
      <!-- We don't want doc, but we *want* doc/javadoc 
           and pdfs-->
      <fileset dir="${basedir}">
        <include name="doc/javadoc/**"/>  
        <include name="doc/userguide/${UserGuideName}.pdf"/>  
      </fileset>      
    </zip>
  </target>
  
  <target name="build_deliverables" description="Rebuild everything and create JARs for classes, javadoc, demo WAR, etc">
    <antcall target="clean"/>
    <antcall target="compile"/>
    <antcall target="_create_classes_jar"/>
    <antcall target="_create_javadoc"/>
    <antcall target="_create_javadoc_jar"/>
    <antcall target="_create_source_jar"/>
    <antcall target="_create_djn_demo_war"/>
    <antcall target="_update_deliverables"/>
    <antcall target="_create_project_zip"/>
    <copy file="${basedir}/doc/userguide/${UserGuideName}.pdf" tofile="${deliverables.output.dir}/${UserGuideName}.${lib_version}.pdf"/>
  
    <echo message="You can locate the deliverables in ${deliverables.output.dir}"/>
  </target>

</project>
